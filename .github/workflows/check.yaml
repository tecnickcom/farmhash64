name: check

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'

env:
  NODE_VERSION: '22'
  PHP_VERSION: '8.4'
  PYTHON_VERSION: '3.x'
  JAVA_VERSION: '21'
  XDEBUG_MODE: coverage

permissions:
  contents: read

jobs:
  c:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
      - name: install dependencies
        run: sudo apt install -y lcov astyle
      - name: set RELEASE number
        run: echo ${GITHUB_RUN_NUMBER} > RELEASE
      - name: test
        run: cd c && make clean version test build

  cgo:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
      - name: setup go build environment
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          check-latest: true
      - name: set RELEASE number
        run: echo ${GITHUB_RUN_NUMBER} > RELEASE
      - name: test
        run: cd cgo && make clean mod deps linter test GOPATH=$(go env GOPATH)

  go:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
      - name: setup go build environment
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          check-latest: true
      - name: set RELEASE number
        run: echo ${GITHUB_RUN_NUMBER} > RELEASE
      - name: test
        run: cd go && make clean mod deps linter test GOPATH=$(go env GOPATH)

  java:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
      - name: setup java build environment
        uses: actions/setup-java@v5
        with:
          distribution: 'adopt'
          java-version: ${{ env.JAVA_VERSION }}
      - name: set RELEASE number
        run: echo ${GITHUB_RUN_NUMBER} > RELEASE
      - name: test
        run: cd java && make clean build test

  javascript:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
      - name: setup node build environment
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: install dependencies
        run: npm install --global uglify-js js-beautify
      - name: set RELEASE number
        run: echo ${GITHUB_RUN_NUMBER} > RELEASE
      - name: test
        run: cd javascript && make clean build

  php:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
      - name: setup php build environment
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          ini-values: display_errors=on, error_reporting=-1, zend.assertions=1
      - name: Cache module
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache/
          key: composer-cache
      - name: set RELEASE number
        run: echo ${GITHUB_RUN_NUMBER} > RELEASE
      - name: test
        run: cd php && make clean build

  python:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
      - name: setup python build environment
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools virtualenv
      - name: set RELEASE number
        run: echo ${GITHUB_RUN_NUMBER} > RELEASE
      - name: test
        run: cd python && make all

  r:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
      - name: setup R build environment
        uses: r-lib/actions/setup-r@v2
      - name: Install dependencies
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          working-directory: './r/farmhash64/'
          cache-version: 2
          extra-packages: |
            any::Rcpp
            any::devtools
            any::inline
            any::pryr
            any::renv
            any::roxygen2
            any::testthat
            any::pkgdown
      - name: set RELEASE number
        run: echo ${GITHUB_RUN_NUMBER} > RELEASE
      - name: test
        run: cd r && make clean build test

  rust:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
      - name: set RELEASE number
        run: echo ${GITHUB_RUN_NUMBER} > RELEASE
      - name: test
        run: cd rust && make clean test

  zig:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
      - name: setup zig build environment
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: '0.11.0'
      - name: set RELEASE number
        run: echo ${GITHUB_RUN_NUMBER} > RELEASE
      - name: test
        run: cd zig && make clean test
